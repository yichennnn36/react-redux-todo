{"version":3,"sources":["components/AddTodo/AddTodoStyle.js","redux/actionTypes.js","redux/actions.js","components/AddTodo/AddTodo.js","redux/selectors.js","components/Todo/TodoStyle.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/VisibilityFilters/VisibilityFiltersStyle.js","constants/constants.js","components/VisibilityFilters/VisibilityFilters.js","TodoApp.js","redux/reducers/todos.js","redux/reducers/visibilityFilter.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["TodoInputBlock","styled","div","TodoInput","input","props","theme","colors","border","InputButton","button","light","dark","ADD_TODO","DELETE_TODO","TOGGLE_TODO","EDIT_TODO","SET_FILTER","CLEAR_ALL_COMPLETED","addTodo","content","type","payload","AddTodo","useState","value","setValue","dispatch","useDispatch","placeholder","onChange","e","target","onKeyPress","key","onClick","trim","selectTodos","store","todos","selectFilters","visibilityFilter","TodoBlock","TodoContent","TodoCheck","primary","secondary","normal","TodoEditInput","TodoFunctionButton","Todo","todo","isEditing","setIsEditing","newContent","setNewContent","handleToggle","id","editingTemplate","editTodo","viewTemplate","className","defaultChecked","completed","htmlFor","TodoList","useSelector","filterState","length","filter","all","incomplete","map","FilterButtonBlock","ModeFilterButton","TheClearAllButton","VISIBILITY_FILTERS","ALL","COMPLETED","INCOMPLETE","VisibilityFilters","Object","keys","filterKey","currentFilter","TodoApp","todoId","initialState","filtersReducer","state","action","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42cfc013.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst TodoInputBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 24px;\n`;\n\nconst TodoInput = styled.input`\n  flex: 1;\n  height: 56px;\n  font-size: 22px;\n  padding: 10px;\n  border-top-left-radius: 6px;\n  border-bottom-left-radius: 6px;\n  border: 1px solid ${props => props.theme.colors.border};\n  border-right: transparent;\n`;\n\nconst InputButton = styled.button`\n  height: 56px;\n  width: 60px;\n  font-size: 22px;\n  background-color: ${props => props.theme.colors.light};\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n  border: 1px solid ${props => props.theme.colors.dark};\n`;\n\nexport { TodoInputBlock, TodoInput, InputButton };","export const ADD_TODO = 'add_todo';\nexport const DELETE_TODO = 'delete_todo';\nexport const TOGGLE_TODO = 'toggle_todo';\nexport const EDIT_TODO = 'edit_todo';\nexport const SET_FILTER = 'set_filter';\nexport const CLEAR_ALL_COMPLETED = 'clear_all_completed';","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, EDIT_TODO, SET_FILTER, CLEAR_ALL_COMPLETED } from './actionTypes';\n\n// action creater\nexport const addTodo = (content) => {\n  return {\n    type: ADD_TODO,\n    payload: {\n      content\n    }\n  }\n};\n\nexport const deleteTodo = (id) => {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      id\n    }\n  }\n};\n\nexport const toggleTodo = (id) => {\n  return {\n    type: TOGGLE_TODO,\n    payload: {\n      id\n    }\n  }\n};\n\nexport const editTodo = (id, newContent) => {\n  return {\n    type: EDIT_TODO,\n    payload: {\n      id,\n      content: newContent\n    }\n  }\n};\n\nexport const setFilter = (filter) => {\n  return {\n    type: SET_FILTER,\n    payload: {\n      filter\n    }\n  }\n};\n\nexport const clearAllCompleted = () => {\n  return {\n    type: CLEAR_ALL_COMPLETED\n  }\n}","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TodoInputBlock, TodoInput, InputButton } from './AddTodoStyle';\nimport { addTodo } from '../../redux/actions';\n\nconst AddTodo = () => {\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleAddTodo = () => {\n    if (!value.trim()) return;\n\n    dispatch(addTodo(value));\n    setValue('');\n  }\n\n  const handleKeyPress = (e) => {\n    if (e.key !== 'Enter') return;\n\n    dispatch(addTodo(value));\n    setValue('');\n  };\n\n  return (\n    <TodoInputBlock>\n      <TodoInput\n        type=\"text\"\n        placeholder=\"What needs to be done?\"\n        value={value}\n        onChange={handleInput}\n        onKeyPress={handleKeyPress}\n      />\n      <InputButton onClick={handleAddTodo}>Add</InputButton>\n    </TodoInputBlock>\n  )\n};\n\nexport default AddTodo;","export const selectTodos = (store) => store.todos.todos;\nexport const selectFilters = (store) => store.visibilityFilter;","import styled from 'styled-components';\n\nconst TodoBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 60px;\n  font-size: 22px;\n  padding: 10px;\n  border: 1px solid ${props => props.theme.colors.border};\n\n  &:first-child {\n    border-top-left-radius: 6px;\n    border-top-right-radius: 6px;\n  }\n\n  &:last-child {\n    border-bottom-left-radius: 6px;\n    border-bottom-right-radius: 6px;\n  }\n\n  & + & {\n    border-top-width: 0;\n  }\n`;\n\nconst TodoContent = styled.div`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst TodoCheck = styled.input`\n  margin: 0 16px 0 10px;\n  font-size: 18px;\n  border: 2px solid ${props => props.theme.colors.primary};\n\n  &:checked {\n    background-color: ${props => props.theme.colors.secondary};\n    border-color: ${props => props.theme.colors.secondary};\n  }\n\n  &:focus {\n    border-color: ${props => props.theme.colors.normal};\n    outline: 0;\n    box-shadow: 0 0 0 3px ${props => props.theme.colors.light};;\n  }\n\n  &:checked ~ label {\n    text-decoration: line-through;\n    color: ${props => props.theme.colors.normal};\n    font-style: italic;\n  }\n\n  & ~ label {\n    font-size: 20px; \n  }\n`;\n\nconst TodoEditInput = styled.input`\n  min-width: 200px;\n  height: 36px;\n  padding: 10px;\n  border: 2px solid ${props => props.theme.colors.primary};\n  border-radius: 6px;\n\n  &:focus {\n    border-color: ${props => props.theme.colors.secondary};\n    outline: 0;\n    box-shadow: 0 0 0 5px ${props => props.theme.colors.light};;\n  }\n`;\n\nconst TodoFunctionButton = styled.div`\n  font-size: 18px;\n\n  @media screen and (min-width:768px) {\n    font-size: 22px;\n  }\n\n  & button {\n    border-color: transparent;\n    background-color: transparent;\n    color: ${props => props.theme.colors.primary};\n    margin-right: 6px;\n\n    @media screen and (min-width:768px) {\n      margin-right: 10px;\n    }\n  }\n  \n  & button:hover {\n    color: ${props => props.theme.colors.secondary};\n  }\n`;\n\nexport { TodoBlock, TodoContent, TodoCheck, TodoEditInput, TodoFunctionButton };","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TodoBlock, TodoContent, TodoCheck, TodoEditInput, TodoFunctionButton } from './TodoStyle';\nimport { deleteTodo, toggleTodo, editTodo } from '../../redux/actions';\n\nconst Todo = ({ todo }) => {\n  const dispatch = useDispatch();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newContent, setNewContent] = useState('');\n\n  const handleDelete = () => {\n    dispatch(deleteTodo(todo.id));\n  };\n\n  const handleToggle = () => {\n    dispatch(toggleTodo(todo.id));\n  };\n\n  const handleEdit = () => {\n    setIsEditing(true);\n    setNewContent(todo.content);\n  };\n\n  const handleEditInput = (e) => {\n    setNewContent(e.target.value);\n  };\n\n  const handleSave = () => {\n    dispatch(editTodo(todo.id, newContent));\n    setIsEditing(false);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n  const editingTemplate = (\n    <>\n      <TodoContent>\n        <TodoEditInput\n          type=\"text\"\n          value={newContent}\n          onChange={handleEditInput}\n        />\n      </TodoContent>\n      <TodoFunctionButton>\n        <button onClick={handleSave}>SAVE</button>\n        <button onClick={handleCancel}>CANCEL</button>\n      </TodoFunctionButton>\n    </>\n  );\n\n  const viewTemplate = (\n    <>\n      <TodoContent>\n        <TodoCheck className=\"form-check-input\"\n          type=\"checkbox\"\n          id={todo.id}\n          defaultChecked={todo.completed}\n          onChange={() => handleToggle(todo.id)}\n        />\n        <label htmlFor={todo.id}>{todo.content}</label>\n      </TodoContent>\n      <TodoFunctionButton>\n        <button onClick={handleEdit}>EDIT</button>\n        <button onClick={handleDelete}>X</button>\n      </TodoFunctionButton>\n    </>\n  );\n  return (\n    <TodoBlock key={`todo-${todo.id}`}>\n      {isEditing ? editingTemplate : viewTemplate}\n    </TodoBlock>\n  )\n}\n\nexport default Todo;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectTodos, selectFilters } from '../../redux/selectors';\nimport Todo from '../Todo/Todo';\n\nconst TodoList = () => {\n  const todos = useSelector(selectTodos);\n  const filterState = useSelector(selectFilters);\n\n  const filterMap = {\n    all: () => true,\n    incomplete: todo => !todo.completed,\n    completed: todo => todo.completed\n  };\n\n  return (\n    <>\n      {\n        todos && todos.length ?\n          todos\n            .filter(filterMap[filterState])\n            .map(todo => {\n              return <Todo key={`todo-${todo.id}`} todo={todo} />\n            }) : \"No Todos, yay!\"\n      }\n    </>\n  )\n}\n\nexport default TodoList;","import styled from 'styled-components';\n\nconst FilterButtonBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n\n  @media screen and (min-width:768px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\nconst ModeFilterButton = styled.div`\n  text-align: right;\n\n  & button {\n    background-color: ${props => props.theme.colors.light};\n    border-color: transparent;\n    padding: 6px 8px;\n    margin-right: 10px;\n    font-size: 18px;\n    border-radius: 6px;\n    transition: transform .2s;\n\n    &:hover {\n      transform: scale(1.1);\n      color: ${props => props.theme.colors.primary};\n    }\n\n  }\n`;\nconst TheClearAllButton = styled.div`\n  text-align: right;\n  margin-top: 20px;\n\n  @media screen and (min-width:768px) {\n    margin-top: 0;\n  }\n\n  & button {\n    background-color: ${props => props.theme.colors.normal};\n    border-color: transparent;\n    padding: 6px 8px;\n    font-size: 18px;\n    border-radius: 6px;\n    transition: transform .2s;\n\n    &:hover {\n      transform: scale(1.1);\n      color: ${props => props.theme.colors.secondary};\n    }\n  }\n`;\n\nexport { FilterButtonBlock, ModeFilterButton, TheClearAllButton };","export const VISIBILITY_FILTERS = {\n  ALL: 'all',\n  COMPLETED: 'completed',\n  INCOMPLETE: 'incomplete'\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterButtonBlock, ModeFilterButton, TheClearAllButton } from './VisibilityFiltersStyle';\nimport { setFilter, clearAllCompleted } from '../../redux/actions';\nimport { VISIBILITY_FILTERS } from '../../constants/constants';\nimport { selectFilters } from '../../redux/selectors';\n\nconst VisibilityFilters = () => {\n  const dispatch = useDispatch();\n  const filterState = useSelector(selectFilters);\n\n  return (\n    <FilterButtonBlock>\n      <ModeFilterButton>\n        {\n          Object.keys(VISIBILITY_FILTERS)\n            .map(filterKey => {\n              const currentFilter = VISIBILITY_FILTERS[filterKey];\n\n              return (\n                <button\n                  key={`visibility-filter-${currentFilter}`}\n                  className={currentFilter === filterState ? 'active' : currentFilter}\n                  onClick={() => dispatch(setFilter(currentFilter))}\n                >\n                  {currentFilter}\n                </button>\n              )\n            }\n            )\n        }\n      </ModeFilterButton>\n      <TheClearAllButton>\n        <button onClick={() => dispatch(clearAllCompleted())}>clear completed</button>\n      </TheClearAllButton>\n    </FilterButtonBlock>\n  )\n};\n\nexport default VisibilityFilters;","import React from 'react';\nimport AddTodo from './components/AddTodo/AddTodo';\nimport TodoList from './components/TodoList/TodoList';\nimport VisibilityFilters from './components/VisibilityFilters/VisibilityFilters';\n\nfunction TodoApp() {\n  return (\n    <div className=\"todo-app\">\n      <h1>Todo</h1>\n      <AddTodo />\n      <TodoList />\n      <VisibilityFilters />\n    </div>\n  );\n}\n\nexport default TodoApp;\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, EDIT_TODO, CLEAR_ALL_COMPLETED } from '../actionTypes';\n\nlet todoId = 0;\nconst initialState = {\n  todos: []\n};\n\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, {\n          id: todoId++,\n          content: action.payload.content,\n          completed: false\n        }]\n      };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos\n          .filter(todo => todo.id !== action.payload.id)\n      }\n\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos\n          .map(todo => {\n            if (todo.id !== action.payload.id) return todo;\n            return {\n              ...todo,\n              completed: !todo.completed\n            }\n          }\n          )\n      };\n\n    case EDIT_TODO:\n      return {\n        ...state,\n        todos: state.todos\n          .map(todo => {\n            if (todo.id !== action.payload.id) return todo;\n            return {\n              ...todo,\n              content: action.payload.content\n            }\n          })\n      }\n\n    case CLEAR_ALL_COMPLETED:\n      return {\n        ...state,\n        todos: state.todos\n          .filter(todo => !todo.completed)\n      }\n\n\n    default:\n      return state;\n  }\n}\n","import { SET_FILTER } from '../actionTypes';\nimport { VISIBILITY_FILTERS } from '../../constants/constants';\n\nconst initialState = VISIBILITY_FILTERS.ALL;\n\nconst filtersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_FILTER:\n      return action.payload.filter;\n\n    default:\n      return state;\n  }\n};\n\nexport default filtersReducer;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport visibilityFilter from './visibilityFilter';\n\nexport default combineReducers({\n  todos,\n  visibilityFilter\n})","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport default createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport TodoApp from './TodoApp';\nimport store from './redux/store';\n\nconst theme = {\n  colors: {\n    primary: '#8a8669',\n    secondary: '#BC9272',\n    normal: '#d1d2ce',\n    border: '#e2e2dc',\n    light: '#f7f7f6',\n    dark: '#828282',\n  }\n};\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n\n  .todo-app {\n    max-width: 600px;\n    margin: 50px auto;\n  }\n\n  .todo-app h1 {\n    font-family: 'Baloo 2', sans-serif;\n    color: ${props => props.theme.colors.primary};\n    font-size: 80px;\n    text-align: center;\n    font-weight: bold;\n  }\n\n  .active {\n    background: ${props => props.theme.colors.secondary} !important;\n\n    &:hover {\n      color: ${props => props.theme.colors.light} !important;\n    }\n  }\n`;\n\nfunction App() {\n  return <TodoApp />;\n}\n\nReactDOM.render(\n  <Provider store={store} >\n    <ThemeProvider theme={theme} >\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}